// Top-level build file where you can add configuration options common to all sub-projects/modules.

apply from: 'aware-core/aware.gradle'

project.ext {
    /* aware */
    // @deprecated aware_libs is no longer necessary since aware package is now
    // included in our code.
    // @deprecated neither supportLibVersion as we switched to androidx.
    // aware_libs = (System.getenv("aware_libs") as String ?: "master-SNAPSHOT")
    // supportLibVersion = "28.0.0"

    /* rn-update-apk */
    // Most google play package we use are 17.1.0, `googlePlayServicesAuthVersion`
    // version 17.1.0 doesn't exist.
    // @note google auth play service dependency is used in this package to fix
    // prevent an SSL bug on android 4.x. cf.
    // https://github.com/mikehardy/react-native-update-apk
    googlePlayServicesAuthVersion = '17.0.0'

    // `supportLibVersion` set < 20 uses androidx. Default goes to the old
    // android app-compat.
    supportLibVersion = '1.1.0'

    /* sentry */
    sentryCli = [
        logLevel: "debug"
    ]
}

buildscript {
    ext {
        buildToolsVersion = "28.0.3"
        minSdkVersion = 19 // @note 16 -> 19 because of Aware minSdkVersion requirements.
        compileSdkVersion = 28
        targetSdkVersion = 28
        kotlin_version = "1.3.30" // For aware-core & Detox
    }
    repositories {
        google()
        jcenter()
        maven { url 'https://jitpack.io' }
    }
    dependencies {
        // Tried to use Android Studio beta chanel with AGL 3.5.0-rc03 to address Robelectric issue
        // https://github.com/robolectric/robolectric/issues/4942 - was 3.4.2
        // -- However, 3.5.0-rc03 breaks realm plugin. Realm is fixed in unstable master branch but not yet released.
        // see https://github.com/realm/realm-js/commit/0648b9192fc67b7c94494617637c36cbe8372432 -
        // however yarn is unable to build it
        // `npm_config_build_from_source=true yarn add realm#6211333a635d3fd202cb4b50e9b291a4c8ed8e3d`
        // -- both with node 10 and 12.
        classpath 'com.android.tools.build:gradle:3.4.2'
        classpath 'com.google.gms:google-services:4.2.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jacoco:org.jacoco.core:0.8.2" // code coverage plugin impl. by android studio

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }

}

// Fix `Execution failed for task ':react-native-appupdate:verifyReleaseResources'`
subprojects {
    afterEvaluate {project ->
        if (project.hasProperty("android")) {
            android {
                // Fix `Execution failed for task ':react-native-appupdate:verifyReleaseResources'`
                // compileSdkVersion ${buildscript.ext.compileSdkVersion}
                // buildToolsVersion "${buildscript.ext.buildToolsVersion}"
                compileSdkVersion 28
                buildToolsVersion "28.0.3"

                // Fix test compilation for react-native-video using `detox build` cli.
                compileOptions {
                    sourceCompatibility JavaVersion.VERSION_1_8
                    targetCompatibility JavaVersion.VERSION_1_8
                }
            }
        }
    }
}

allprojects {
    repositories {
        // Add jitpack repository (added by react-native-spinkit)
        // `www.` in url added manually to fix ponctual timeout issues (no joke it's top notch
        // workaround) cf. `https://github.com/jitpack/jitpack.io/issues/3973#issuecomment-531199645`
        maven { url "https://www.jitpack.io" }
        mavenLocal()
        google()
        maven { url 'https://maven.google.com' }
        maven {
            // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
            url("$rootDir/../node_modules/react-native/android")
        }
        maven {
            // Android JSC is installed from npm
            url("$rootDir/../node_modules/jsc-android/dist")
        }
        maven {
            // All of Detox' artifacts are provided via the npm module
            url("$rootDir/../node_modules/detox/Detox-android")
        }

        // keep in the bottom cf. https://github.com/react-native-community/react-native-camera/issues/1878#issuecomment-432514334
        jcenter()

        configurations.all {
            resolutionStrategy {
                // latest androidx lib versions are available here `https://developer.android.com/jetpack/androidx/versions`.
                force "androidx.annotation:annotation:1.1.0" // fixes `https://github.com/wix/Detox/issues/1537` for detox and uiautomator
                force "androidx.core:core:1.1.0"
                force "androidx.appcompat:appcompat:1.1.0"
                force "androidx.vectordrawable:vectordrawable:1.0.0"

                // Fix lottie-react-native build issue.
                // Fix `Execution failed for task ':react-native-appupdate:verifyReleaseResources'`
                // @note We now use androidx with jetifier.
                // force "com.android.support:appcompat-v7:$supportLibVersion"
                // force "com.android.support:support-v7:$supportLibVersion"
            }
        }
    }
}
