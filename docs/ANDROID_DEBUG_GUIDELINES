# Basic configuration

## Failure to install dependencies through `yarn`
error /Users/bims1/Documents/github/Flux 2/node_modules/weak-napi: Command failed.
`clang: error: no such file or directory: '2/node_modules/node-addon-api'`
=> Make sure you have no space in your path !!

## Undefined process.env var in js code

Don't forget to flush cache (`react-native start --reset-cache`)!
In case of `./gradlew assembleRelease`, run `./gradlew clean` & use export prior to env-variable-prefixed bash command!
CLI command in package.json have been configured to avoid cache issue and other pitfalls.

## Test run no launch issue

Appium log:
[debug] [Instrumentation] INSTRUMENTATION_RESULT: shortMsg=Process crashed.

adb logcat:
adbd    : failed to connect to socket 'tcp:6790': Operation not permitted

==> Android 9.+ bug -- use another android version for tests
==> see https://issuetracker.google.com/issues/132325318
==> see https://github.com/appium/appium/issues/12754

## ./gradlew assembleRelease/assembleDebug issue

Make sure you have set your android/gradle.properties file (it's in .gitignore
due to cryptographic info):

```
# @note These can be set to CI by using ./graldlew -PVAR_NAME1=... -PVAR_NAME2=... -PPACKAGE.VAR_NAME=...
FLUX_RELEASE_STORE_FILE=xxxxxxxxx.keystore
FLUX_RELEASE_KEY_ALIAS=xxxxxxxxx
FLUX_RELEASE_STORE_PASSWORD=xxxxxxxxx
FLUX_RELEASE_KEY_PASSWORD=xxxxxxxxx

android.useAndroidX=true
android.enableJetifier=true

# @note This can be set to CI by prepending GRADLE_OPTS="-Xms128m -Xmx2048m -XX:+CMSClassUnloadingEnabled" to the command.
org.gradle.jvmargs=-Xms128m -Xmx2048m -XX:+CMSClassUnloadingEnabled
```

Also, make sure you set the proper keystore (see react-native official doc, cf. `https://facebook.github.io/react-native/docs/signed-apk-android`).

## Gradle: Execution failed for task ':processDebugManifest'
Make sure you've loaded an env (`source dev.env` for instance). Also, if 
you're using Android Studio, make sure you loaded it through console and 
sourced the env as well before running the build!

https://github.com/react-native-community/cli/issues/230#issuecomment-546098190

# Issue with `npx react-native ugprade`

See `https://github.com/react-native-community/cli/issues/230#issuecomment-546098190`.

# Android Studio - Project Structure Issue:

## Missing env variable xxx

Source env file and relaunch android studio using CLI.

## In case of graddle sync issue unrelated to user defect. ie. Unsupported Modules Detected. Compilation is not supported for following modules...
- close android studio
- $ rm -r android/.idea android/*.iml
- open back android studio & reimport project

Can't get the project to work with latest intellij idea (upon which android
studio is based). This fix wont work. Potential solution would be to upgrade
project's gradle version to something more recent, as android studio is based
upon an old version of intellij idea (although google upgrade could be
forwarded first into android studio).

## NewGradleSyncNotSupportedException: New Gradle Sync is not supported due to containing Kotlin modules using an unsupported plugin version
Try setting not.eligible.for.single.variant.sync to true in .idea/workspace.xml
cf. https://stackoverflow.com/questions/54201216/android-studio-3-3-new-gradle-sync-is-not-supported-due-to-containing-kotlin-mo

```
<component name="PropertiesComponent">
    <property name="not.eligible.for.single.variant.sync" value="true" />
</component>
```

# ./gradlew assembleRelease stuck during bundleReleaseJsAndAssets stage

Do the bundling manually instead:

```
$ npx react-native bundle --platform android --dev false --entry-file index.js --bundle-output android/app/src/main/assets/index.android.bundle --assets-dest android/app/src/main/res/
$ cd android/
$ ./gradlew assembleRelease -x bundleReleaseJsAndAssets
```

# Execution failed for task ':app:processDebugManifest'

First make sure you sourced an env file before running the command!

Otherwise, probably a dependency issue.
See `https://stackoverflow.com/questions/56644149/how-to-fix-execution-failed-for-task-appprocessdebugmanifest-in-react-native`
See `https://github.com/facebook/react-native/issues/25294#issuecomment-503024749`

# Remote js debugger fails & prevent the app from working: `Error: DeltaPatcher should receive a base Bundle when being initialized`

Actually just a source code error, watch your `npx react-native start ...` result.


# Android debugger crash during app debugging
Seems to occur due to ARN.

Still to test:
- use upgraded IDE (intellij Idea instead of android studio) - attempted but couldn't import the project.
- use minimal study setup with lower sensor service count in order to reduce debugger's overhead impact.

# Breakpoint not hitting w/ android studio
Breakpoint doesn't seem to hit in certain situation:
- inside listeners who have already been instanciated ? (could be)
- often, line-based breakpoint.
=> ! What works, weirdly enough is to set the breakpoint as function entry/exit point rather than line-based bp.
     In current setting, protractor is deactivated during debugging so wrong source-mapping shouldn't be the issue
     at hand here. !
Not sure anymore if those issues appeared with genymotion emulator or standard android studio one (or both).
=> Could unlikely be related to jdb version or adbd.

# Emulator - Retrieve database

## Standard procedure to retrieve db using root access:
- to pull database using adb, you need root access to the phone
- to get root access to the phone, you need userdebug version of android installed
- userdebug version of android emulator doesn't come with google play
- (hypothesis) without google play installed on android, you can't use google services thus notification service
- to use Flux, you need google services installed on the phone!

=> usual procedure with root access doesn't work with Flux.

## Solution without root access
from https://stackoverflow.com/questions/2078710/android-adb-access-to-application-databases-without-root
from https://stackoverflow.com/questions/18471780/android-adb-retrieve-database-using-run-as

### Fast way
$ adb exec-out run-as org.pnplab.flux ls files/
$ adb exec-out run-as org.pnplab.flux cat files/[...].db > file.db

### Transfer file from app databases directory to external storage
adb shell
$ run-as org.pnplab.flux
$ cp ./databases/dbname.db /sdcard/
$ exit
$ exit

### Transfer file from external storage to app databases directory
adb shell
$ run-as org.pnplab.flux
$ cp /sdcard/dbname.db ./databases/
$ exit
$ exit

