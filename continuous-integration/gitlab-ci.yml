stages:
    - build
    - test
    - release

variables:
    APK_FILE: ${CI_PROJECT_NAME}.${CI_COMMIT_REF_SLUG}.${CI_COMMIT_SHORT_SHA}.apk

build:android:
    stage: build
    when: manual
    allow_failure: false
    tags:
        - docker
    image: registry.gitlab.com/pnplab/flux/android-builder:latest
    variables:
        GRADLE_OUTPUT_PATH: android/app/build/outputs/apk/release/app-universal-release.apk
        FLUX_AUTO_UPDATE: "false"
    artifacts:
        name: ${APK_FILE}
        paths:
            - ${APK_FILE}
        expire_in: 7 days
    cache:
        key: build.${CI_PROJECT_ID}
        paths:
            - android/.gradle/
            - node_modules/
    before_script:
        - yarn
    script:
        # Those variables have to be set in gitlab ci/cd environment variables
        # @note we need to add `-e` to expand `\n` into new lines in gitlab! 
        - echo -e "FLUX_RELEASE_STORE_FILE=flux-release-key.keystore\nFLUX_RELEASE_KEY_ALIAS=${FLUX_RELEASE_KEY_ALIAS}\nFLUX_RELEASE_STORE_PASSWORD=${FLUX_RELEASE_STORE_PASSWORD}\nFLUX_RELEASE_KEY_PASSWORD=${FLUX_RELEASE_KEY_PASSWORD}" > android/gradle.properties
        # Generated through `base64 -i android/app/flux-release-key.keystore -o <outfile>`
        - echo ${FLUX_RELEASE_KEY_KEYSTORE_B64} | base64 -d > android/app/flux-release-key.keystore
        - echo ${GOOGLE_SERVICES_JSON} > android/app/google-services.json
        - npx react-native bundle --platform android --dev false --entry-file index.js --bundle-output android/app/src/main/assets/index.android.bundle --assets-dest android/app/src/main/res/
        - cd android && ./gradlew assembleRelease -PFLUX_RELEASE_STORE_PASSWORD=${FLUX_RELEASE_STORE_PASSWORD} -PFLUX_RELEASE_KEY_PASSWORD=${FLUX_RELEASE_KEY_PASSWORD} -Pandroid.useAndroidX=true -Pandroid.enableJetifier=true -Porg.gradle.jvmargs="-Xms128m -Xmx1024m -XX:+CMSClassUnloadingEnabled" -x bundleReleaseJsAndAssets && cd ..
    after_script:
        - cp ${GRADLE_OUTPUT_PATH} ${APK_FILE}


test:android:
    stage: test
    dependencies:
        - build:android
    allow_failure: false
    tags:
        - docker
    image: registry.gitlab.com/pnplab/flux/test-farm-runner:latest
    script:
        - aws configure set default.region ${AWS_REGION}
        - aws configure set aws_access_key_id ${AWS_ACCESS_KEY_ID}
        - aws configure set aws_secret_access_key ${AWS_SECRET_ACCESS_KEY}
        - ./scripts/tests/package_tests.sh && ./scripts/tests/upload_tests.sh &
        - ./scripts/tests/upload_yaml.sh &
        - ./scripts/tests/upload_app.sh "${APK_FILE}" &
        - wait
        - export RUN_ARN=$(./scripts/tests/run.sh -q)
        - ./scripts/tests/poll_run_results.sh -a ${RUN_ARN} -q


release:
    stage: release
    only:
        - master
    dependencies:
        - build:android
    tags:
        - docker
    image: tarampampam/node:10.15-alpine # node + git
    before_script:
        # Rename apk file so it can be found as in package.json#release config.
        - mv ${APK_FILE} Flux.apk
    script:
        - npx -p @semantic-release/changelog@3 -p @semantic-release/commit-analyzer@6 -p @semantic-release/exec@3 -p @semantic-release/github@5 -p @semantic-release/npm@5 -p @semantic-release/release-notes-generator@7 -p semantic-release@15 semantic-release
    after_script:
        - mv Flux.apk ${APK_FILE}


# build:ios:
#     variables:
#         PLATFORM: ios
#         FILE_TYPE: ipa
#         OUTPUT_PATH: ./$CI_PROJECT_NAME
#     <<: *job_build
#     script:
#         - export PACKAGE_NAME=$(node -p -e "require('./package.json').name")
#         - cd ios
#         - xcodebuild -scheme $PACKAGE_NAME archive -archivePath $PACKAGE_NAME.xcarchive -allowProvisioningUpdates
#         - xcodebuild -exportArchive -archivePath ./$PACKAGE_NAME.xcarchive -exportPath . -exportOptionsPlist $PACKAGE_NAME/Info.plist
#         - mv $PACKAGE_NAME.ipa ../$PACKAGE_NAME.ipa
